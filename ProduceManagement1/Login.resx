<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>